---
- name: Provision VM
  hosts: all
  gather_facts: true
  become: true
  tasks:
    - name: Create user var
      ansible.builtin.set_fact:
        home_user: "{{ lookup('env', 'HOME') }}"
    - name: Replace a localhost entry with our own | {{ inventory_hostname }}
      ansible.builtin.lineinfile:
        path: /etc/hosts
        regexp: '^127\.0\.0\.1'
        line: 127.0.0.1 localhost
        owner: root
        group: root
        mode: '0644'
    - name: Allow password authentication |{{ inventory_hostname }}
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^PasswordAuthentication"
        line: "PasswordAuthentication yes"
        state: present
      notify: Restart sshd
    - name: Set authorized key took from file | {{ inventory_hostname }}
      ansible.posix.authorized_key:
        user: vagrant
        state: present
        key: "{{ lookup('file', '{{ home_user }}/.ssh/id_ed25519.pub') }}"
    - name: Add IP address of all hosts to all hosts | {{ inventory_hostname }}
      ansible.builtin.lineinfile:
        dest: /etc/hosts
        regexp: '.*{{ item }}$'
        line: "{{ hostvars[item].ansible_host }} {{ item }}"
        state: present
      when: hostvars[item].ansible_host is defined
      with_items: "{{ groups.all }}"
    - name: Copy SSH key
      ansible.builtin.copy:
        src: ~/.ssh/id_ed25519
        dest: /home/vagrant/.ssh/id_ed25519
        mode: "0600"
        owner: vagrant
        group: vagrant
    - name: Copy SSH config
      ansible.builtin.copy:
        src: files/ssh-config
        dest: /home/vagrant/.ssh/config
        mode: "0600"
        owner: vagrant
        group: vagrant
  handlers:
    - name: Restart sshd
      ansible.builtin.service:
        name: sshd
        state: restarted

- name: Add soft on kubernetes VM
  hosts: kubernetes
  gather_facts: true
  become: true
  vars:
    sysctl_config:
      net.ipv4.ip_forward: 1
      net.bridge.bridge-nf-call-ip6tables: 1
      net.bridge.bridge-nf-call-iptables: 1
  tasks:
    - name: Add Kubernetes apt-key
      ansible.builtin.get_url:
        url: https://pkgs.k8s.io/core:/stable:/v{{ kube_version }}/deb/Release.key
        dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
        mode: "0644"
        force: true
    - name: Add Kubernetes APT repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v{{ kube_version }}/deb/ /"
        state: present
        update_cache: true
    - name: Add Docker GPG key | {{ inventory_hostname }}
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
    - name: Add Docker repository | {{ inventory_hostname }}
      ansible.builtin.apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu jammy stable
        state: present
        update_cache: true
    - name: Install packages | {{ inventory_hostname }}
      ansible.builtin.package:
        name:
          - gnupg2
          - software-properties-common
          - apt-transport-https
          - ca-certificates
          - kubelet
          - kubeadm
          - kubectl
          - cri-tools
          - containerd.io
          - net-tools
        state: present
    - name: Hold version | {{ inventory_hostname }}
      ansible.builtin.dpkg_selections:
        name: "{{ item }}"
        selection: hold
      with_items:
        - kubeadm
        - kubelet
        - kubectl
    - name: Load modules overlay and br_netfilter
      community.general.modprobe:
        name: overlay
        state: present
      with_items:
        - overlay
        - br_netfilter
    - name: Load modprobe
      ansible.builtin.shell:
        cmd: modprobe {{ item }}
      with_items:
        - overlay
        - br_netfilter
    - name: Configure systctl
      ansible.posix.sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        state: present
        sysctl_file: /etc/sysctl.d/kubernetes.conf
      with_dict: '{{ sysctl_config }}'
    - name: Configure crictl tools config
      ansible.builtin.copy:
        src: files/crictl.yaml
        dest: /etc/
        owner: root
        group: root
        mode: "0644"
    - name: Check swap State
      ansible.builtin.stat:
        path: /swap.img
      register: swap_file_check
    - name: Unmount swap | {{ inventory_hostname }}
      ansible.builtin.shell:
        cmd: swapoff -a
      when: ansible_swaptotal_mb > 0
    - name: Disable swap | {{ inventory_hostname }}
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '\sswap\s+sw\s+'
        state: absent
      when: swap_file_check.stat.exists
    - name: Delete swap file
      ansible.builtin.file:
        path: /swap.img
        state: absent
      when: swap_file_check.stat.exists
    - name: Create containerd folder
      ansible.builtin.file:
        name: /etc/containerd/
        owner: root
        group: root
        mode: "0644"
        state: directory
    - name: Delete Container default config
      ansible.builtin.copy:
        src: files/config.toml
        dest: /etc/containerd/config.toml
        owner: root
        group: root
        mode: "0644"
      notify: Restart containerd
  handlers:
    - name: Restart containerd
      ansible.builtin.service:
        name: containerd
        state: restarted

- name: Install soft on controller
  hosts: controller
  gather_facts: true
  become: true

  tasks:
    - name: Add Kubernetes apt-key
      ansible.builtin.get_url:
        url: https://pkgs.k8s.io/core:/stable:/v{{ kube_version }}/deb/Release.key
        dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
        mode: "0644"
        force: true
    - name: Add Kubernetes APT repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v{{ kube_version }}/deb/ /"
        state: present
        update_cache: true
    - name: Install packages | {{ inventory_hostname }}
      ansible.builtin.package:
        name:
          - kubectl
          - haproxy
        state: present
    - name: Add haproxy config | {{ inventory_hostname }}
      vars:
        cplanes: "{{ groups['cplanes'] }}"
        workers: "{{ groups['workers'] }}"
      ansible.builtin.template:
        src: files/haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
        mode: "0644"
    - name: Start haproxy | {{ inventory_hostname }}
      ansible.builtin.service:
        name: haproxy
        enabled: true
        state: restarted
    - name: Create folder .kube
      ansible.builtin.file:
        dest: /home/vagrant/.kube
        state: directory
        owner: vagrant
        group: vagrant
        mode: "0700"
